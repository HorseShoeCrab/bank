package ams;

import java.util.Scanner;

// 이클립스 코드 자동정렬 단축키 : CTRL + Space + F
public class BankMain {
	public static void main(String[] args) {
		Bank bank = new Bank(100);
		Scanner scanner = new Scanner(System.in);
		int accountNo = (int) ((Math.random() * 999999) + 11110);

		String strAccountNo = String.valueOf(accountNo);
		System.out.println("예금주 이름 :");
		String name = scanner.nextLine();
		System.out.println("비밀번호 :");
		String pass = scanner.nextLine();
		System.out.println("예금액 :");
		int inputMoney = scanner.nextInt();

		bank.openAccount(strAccountNo, name, pass, inputMoney);
		bank.openAccount("123-963", "아이언맨", "123", 5500);
		bank.openAccount("432-432", "헐크", "123", 3300);
		bank.openAccount("879-486", "스파이터", "123", 5410);
		bank.openAccount("124-312", "콤", "123", 500);
	
		//	searchByName(bank, scanner);
		//	searchByNo(bank, scanner);
		
		System.out.println("=== 계좌 삭제 ===");
		System.out.println("삭제하려는 계좌번호 입력 :");
		String deleteAccount = scanner.next();
		Account account = bank.searchAccountByAccoountNo(deleteAccount);
		if (account != null) {
			boolean isClose = bank.closeAccount(deleteAccount);
			if (isClose) {
				System.out.println("삭제완료 !!");
			}
			System.out.println("삭제가 불가능합니다. 전산팀에 문여바랍니다.");
		} else {
			System.out.println("삭제하려고 조회한 계좌가 존재하지 않습니다.");

		}
		searchList(bank);
		
	}

	private static void searchList(Bank bank) {
		System.out.println("=== 계좌번호 전체 목록 출력 ===");
		BankBook[] list = bank.getBankBookList();
		if (list != null) {
			for (int i = 0; i < bank.getCount();i++) {
				System.out.println(list[i].toString());
			}
		} else {
			System.out.println("계좌가 하나도 없습니다.");
		}
		}
		private static void searchByName(Bank bank, Scanner scanner) {
			System.out.println("=== 계좌번호 조회(이름 입력) ===");
			System.out.println("조회하려는 이름을 입력");
			String inputName = scanner.next();
			BankBook[] bankBooks = (BankBook[]) bank
					.searchAccountsByName(inputName);
			// 메소드 오리지날 탐색 : CTRL + 메소드 클릭
			// 디버깅 : 에러를 봤을 때 데이터 값을 출력해보면서 버그를 잡아가는 것
			if (bankBooks != null) {
				for (int i = 0; i < bankBooks.length; i++) {
					System.out.println(bankBooks[i].toString());
				}
			} else {
				System.out.println("조회이름 없음");
			}
	}

	private static void searchByNo(Bank bank, Scanner scanner) {
		System.out.println("=== 계좌번호 조회(번호 입력) ===");
		System.out.println("계좌번호 입력 :");
		String searchAccountNo = scanner.next();
		Account account = bank.searchAccountByAccoountNo(searchAccountNo);
		if (account != null) { 
			System.out.println(account.toString());
		} else {
			System.out.println("조회결과가 없습니다");
		}
	}
	
	
	/*
	 * 메소드 리팩토링 기법
	 *  : 복잡한 스파게티 소스 가독성 있게 분리시키고 메소드를 재사용 할 수 있도록 모듈화 시키는 작업
	 */
	
	
}

